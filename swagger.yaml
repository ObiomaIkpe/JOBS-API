openapi: 3.0.0
info:
  title: Jobs-API-99
  contact: {}
  version: '1.0'
servers:
- url: https://intro-to-api.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: register user
      operationId: registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registeruserrequest'
              - example:
                  name: pete
                  email: pete774@gmail.com
                  password: obbiias
            example:
              name: pete
              email: pete774@gmail.com
              password: obbiias
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login user
      operationId: loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginuserrequest'
              - example:
                  name: pete
                  email: pete774@gmail.com
                  password: obbiias
            example:
              name: pete
              email: pete774@gmail.com
              password: obbiias
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /job:
    post:
      tags:
      - Jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/createjobrequest'
              - example:
                  company: google
                  position: Software Engineer
            example:
              company: google
              position: Software Engineer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /job/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: get single job
      operationId: getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: update job
      operationId: updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updatejobrequest'
              - example:
                  company: google
                  postion: software engineer
            example:
              company: google
              postion: software engineer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: delete job
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    registeruserrequest:
      title: registeruserrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: pete
        email: pete774@gmail.com
        password: obbiias
    loginuserrequest:
      title: loginuserrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: pete
        email: pete774@gmail.com
        password: obbiias
    createjobrequest:
      title: createjobrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: google
        position: Software Engineer
    updatejobrequest:
      title: updatejobrequest
      required:
      - company
      - postion
      type: object
      properties:
        company:
          type: string
        postion:
          type: string
      example:
        company: google
        postion: software engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''
